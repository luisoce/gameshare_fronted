{"version":3,"file":"vest-utils.development.js","sources":["../../src/bindNot.ts","../../src/isNumeric.ts","../../src/numberEquals.ts","../../src/lengthEquals.ts","../../src/greaterThan.ts","../../src/longerThan.ts","../../src/cache.ts","../../src/isNull.ts","../../src/isUndefined.ts","../../src/isNullish.ts","../../src/asArray.ts","../../src/callEach.ts","../../src/hasOwnProperty.ts","../../src/isFunction.ts","../../src/isPromise.ts","../../src/optionalFunctionValue.ts","../../src/assign.ts","../../src/defaultTo.ts","../../src/invariant.ts","../../src/isStringValue.ts","../../src/either.ts","../../src/isBooleanValue.ts","../../src/deferThrow.ts","../../src/bus.ts","../../src/seq.ts","../../src/mapFirst.ts","../../src/valueIsObject.ts","../../src/isArrayValue.ts","../../src/isEmpty.ts","../../src/isPositive.ts","../../src/text.ts","../../src/SimpleStateMachine.ts","../../src/nonnullish.ts","../../src/tinyState.ts","../../src/StringObject.ts","../../src/noop.ts","../../src/Predicates.ts"],"sourcesContent":["export default function bindNot<T extends (...args: any[]) => unknown>(fn: T) {\n  return (...args: Parameters<T>): boolean => !fn(...args);\n}\n","import bindNot from 'bindNot';\n\nexport function isNumeric(value: string | number): boolean {\n  const str = String(value);\n  const num = Number(value);\n  const result =\n    !isNaN(parseFloat(str)) && !isNaN(Number(value)) && isFinite(num);\n  return Boolean(result);\n}\n\nexport const isNotNumeric = bindNot(isNumeric);\n","import bindNot from 'bindNot';\nimport { isNumeric } from 'isNumeric';\n\nexport function numberEquals(\n  value: string | number,\n  eq: string | number\n): boolean {\n  return isNumeric(value) && isNumeric(eq) && Number(value) === Number(eq);\n}\n\nexport const numberNotEquals = bindNot(numberEquals);\n","import bindNot from 'bindNot';\nimport { numberEquals } from 'numberEquals';\n\nexport function lengthEquals(\n  value: string | unknown[],\n  arg1: string | number\n): boolean {\n  return numberEquals(value.length, arg1);\n}\n\nexport const lengthNotEquals = bindNot(lengthEquals);\n","import { isNumeric } from 'isNumeric';\n\nexport function greaterThan(\n  value: number | string,\n  gt: number | string\n): boolean {\n  return isNumeric(value) && isNumeric(gt) && Number(value) > Number(gt);\n}\n","import { greaterThan } from 'greaterThan';\n\nexport function longerThan(\n  value: string | unknown[],\n  arg1: string | number\n): boolean {\n  return greaterThan(value.length, arg1);\n}\n","import { lengthEquals } from 'lengthEquals';\nimport { longerThan } from 'longerThan';\nimport { Nullable } from 'utilityTypes';\n\n/**\n * Creates a cache function\n */\nexport default function createCache<T = unknown>(maxSize = 1): CacheApi<T> {\n  const cacheStorage: Array<[unknown[], T]> = [];\n\n  const cache = (\n    deps: unknown[],\n    cacheAction: (...args: unknown[]) => T\n  ): T => {\n    const cacheHit = cache.get(deps);\n    // cache hit is not null\n    if (cacheHit) return cacheHit[1];\n\n    const result = cacheAction();\n    cacheStorage.unshift([deps.concat(), result]);\n\n    if (longerThan(cacheStorage, maxSize)) cacheStorage.length = maxSize;\n\n    return result;\n  };\n\n  // invalidate an item in the cache by its dependencies\n  cache.invalidate = (deps: any[]): void => {\n    const index = findIndex(deps);\n    if (index > -1) cacheStorage.splice(index, 1);\n  };\n\n  // Retrieves an item from the cache.\n  cache.get = (deps: unknown[]): Nullable<[unknown[], T]> =>\n    cacheStorage[findIndex(deps)] || null;\n\n  return cache;\n\n  function findIndex(deps: unknown[]): number {\n    return cacheStorage.findIndex(\n      ([cachedDeps]) =>\n        lengthEquals(deps, cachedDeps.length) &&\n        deps.every((dep, i) => dep === cachedDeps[i])\n    );\n  }\n}\n\nexport type CacheApi<T = unknown> = {\n  (deps: unknown[], cacheAction: (...args: unknown[]) => T): T;\n  get(deps: unknown[]): Nullable<[unknown[], T]>;\n  invalidate(item: any): void;\n};\n","import bindNot from 'bindNot';\n\nexport function isNull(value: unknown): value is null {\n  return value === null;\n}\n\nexport const isNotNull = bindNot(isNull);\n","import bindNot from 'bindNot';\n\nexport function isUndefined(value?: unknown): value is undefined {\n  return value === undefined;\n}\n\nexport const isNotUndefined = bindNot(isUndefined);\n","import bindNot from 'bindNot';\nimport { isNull } from 'isNull';\nimport { isUndefined } from 'isUndefined';\nimport { Nullish } from 'utilityTypes';\n\nexport function isNullish(value: any): value is Nullish {\n  return isNull(value) || isUndefined(value);\n}\n\nexport const isNotNullish = bindNot(isNullish);\n","export default function asArray<T>(possibleArg: T | T[]): T[] {\n  return ([] as T[]).concat(possibleArg);\n}\n","import type { CB } from 'utilityTypes';\n\nexport default function callEach(arr: CB[]): void {\n  return arr.forEach(fn => fn());\n}\n","/**\n * A safe hasOwnProperty access\n */\nexport default function hasOwnProperty<T>(\n  obj: T,\n  key: string | number | symbol\n): key is keyof T {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","export default function isFunction(\n  value: unknown\n): value is (...args: unknown[]) => unknown {\n  return typeof value === 'function';\n}\n","import isFunction from 'isFunction';\n\nexport default function isPromise(value: any): value is Promise<unknown> {\n  return !!value && isFunction(value.then);\n}\n","import isFunction from 'isFunction';\nimport { DynamicValue } from 'utilityTypes';\n\nexport default function optionalFunctionValue<T>(\n  value: DynamicValue<T>,\n  ...args: unknown[]\n): T {\n  return isFunction(value) ? value(...args) : value;\n}\n","export default Object.assign;\n","import optionalFunctionValue from 'optionalFunctionValue';\nimport { DynamicValue, Nullish } from 'utilityTypes';\n\nexport default function defaultTo<T>(\n  value: DynamicValue<Nullish<T>>,\n  defaultValue: DynamicValue<T>\n): T {\n  return optionalFunctionValue(value) ?? optionalFunctionValue(defaultValue);\n}\n","import optionalFunctionValue from 'optionalFunctionValue';\nimport type { Stringable } from 'utilityTypes';\n\nexport default function invariant(\n  condition: any,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  message?: String | Stringable\n): asserts condition {\n  if (condition) {\n    return;\n  }\n\n  // If message is a string object (rather than string literal)\n  // Throw the value directly as a string\n  // Alternatively, throw an error with the message\n  throw message instanceof String\n    ? message.valueOf()\n    : new Error(message ? optionalFunctionValue(message) : message);\n}\n","export default function isStringValue(v: unknown): v is string {\n  return String(v) === v;\n}\n","export default function either(a: unknown, b: unknown): boolean {\n  return !!a !== !!b;\n}\n","export default function isBoolean(value: unknown): value is boolean {\n  return !!value === value;\n}\n","export default function deferThrow(message?: string): void {\n  setTimeout(() => {\n    throw new Error(message);\n  }, 0);\n}\n\nexport type TDeferThrow = typeof deferThrow;\n","import type { CB } from 'utilityTypes';\n\nconst EVENT_WILDCARD = '*';\n\nexport function createBus(): BusType {\n  const listeners: Record<string, CB[]> = {};\n\n  return {\n    emit(event: string, data?: any) {\n      getListeners(event)\n        .concat(getListeners(EVENT_WILDCARD))\n        .forEach(handler => {\n          handler(data);\n        });\n    },\n\n    on(event: string, handler: CB): OnReturn {\n      listeners[event] = getListeners(event).concat(handler);\n\n      return {\n        off() {\n          listeners[event] = getListeners(event).filter(h => h !== handler);\n        },\n      };\n    },\n  };\n\n  function getListeners(event: string): CB[] {\n    return listeners[event] || [];\n  }\n}\n\ntype OnReturn = { off: CB<void> };\n\nexport type BusType = {\n  on: (event: string, handler: CB) => OnReturn;\n  emit: (event: string, data?: any) => void;\n};\n","/**\n * @returns a unique numeric id.\n */\n\nimport { CB } from 'utilityTypes';\n\nconst seq = genSeq();\n\nexport default seq;\n\nexport function genSeq(namespace?: string): CB<string> {\n  return (\n    (n: number) => () =>\n      `${namespace ? namespace + '_' : ''}${n++}`\n  )(0);\n}\n","export default function mapFirst<T>(\n  array: T[],\n  callback: (\n    item: T,\n    breakout: (conditional: boolean, value: unknown) => void,\n    index: number\n  ) => unknown\n): any {\n  let broke = false;\n  let breakoutValue = null;\n  for (let i = 0; i < array.length; i++) {\n    callback(array[i], breakout, i);\n\n    if (broke) {\n      return breakoutValue;\n    }\n  }\n\n  function breakout(conditional: boolean, value: unknown) {\n    if (conditional) {\n      broke = true;\n      breakoutValue = value;\n    }\n  }\n}\n","import { isNullish } from 'isNullish';\n\nexport function isObject(v: any): v is Record<any, any> {\n  return typeof v === 'object' && !isNullish(v);\n}\n","import bindNot from 'bindNot';\n\n// The module is named \"isArrayValue\" since it\n// is conflicting with a nested npm dependency.\n// We may need to revisit this in the future.\n\nexport function isArray(value: unknown): value is Array<unknown> {\n  return Boolean(Array.isArray(value));\n}\n\nexport const isNotArray = bindNot(isArray);\n","import bindNot from 'bindNot';\nimport hasOwnProperty from 'hasOwnProperty';\nimport { lengthEquals } from 'lengthEquals';\nimport { isObject } from 'valueIsObject';\n\nexport function isEmpty(value: unknown): boolean {\n  if (!value) {\n    return true;\n  } else if (hasOwnProperty(value, 'length')) {\n    return lengthEquals(value as string | unknown[], 0);\n  } else if (isObject(value)) {\n    return lengthEquals(Object.keys(value as Record<string, unknown>), 0);\n  }\n\n  return false;\n}\n\nexport const isNotEmpty = bindNot(isEmpty);\n","import { greaterThan } from 'greaterThan';\n\nexport function isPositive(value: number | string): boolean {\n  return greaterThan(value, 0);\n}\n","import { isEmpty } from 'isEmpty';\nimport { isObject } from 'valueIsObject';\n\nconst regexp = /{(.*?)}/g;\n\nexport function text(str: string, ...substitutions: Array<unknown>): string {\n  const first = substitutions[0];\n\n  if (isObject(first)) {\n    return str.replace(regexp, (placeholder, key: string) => {\n      return `${first[key] ?? placeholder}`;\n    });\n  }\n\n  const subs = [...substitutions];\n\n  return str.replace(regexp, placeholder => {\n    return `${isEmpty(subs) ? placeholder : subs.shift()}`;\n  });\n}\n","import { CB } from 'utilityTypes';\n\nconst STATE_WILD_CARD = '*';\ntype TStateWildCard = typeof STATE_WILD_CARD;\n\nexport type TStateMachine<S extends string = string, A extends S = S> = {\n  initial: S;\n  states: Partial<{\n    [key in S & TStateWildCard]: {\n      [key in A]?: S | [S, CB<boolean, [payload?: any]>];\n    };\n  }>;\n};\n\nexport type TStateMachineApi<S extends string = string, A extends S = S> = {\n  getState: CB<S>;\n  initial: CB<S>;\n  staticTransition: (from: S, action: A, payload?: any) => S;\n  transition: (action: A, payload?: any) => void;\n};\n\nexport function StateMachine<S extends string = string, A extends S = S>(\n  machine: TStateMachine<S, A>\n): TStateMachineApi<S, A> {\n  let state = machine.initial;\n\n  const api = { getState, initial, staticTransition, transition };\n\n  return api;\n\n  function getState(): S {\n    return state;\n  }\n\n  function initial(): S {\n    return machine.initial;\n  }\n\n  function transition(action: A, payload?: any): S {\n    return (state = staticTransition(state, action, payload));\n  }\n\n  // eslint-disable-next-line complexity\n  function staticTransition(from: S, action: A, payload?: any): S {\n    const transitionTo =\n      machine.states[from]?.[action] ??\n      // @ts-expect-error - This is a valid state\n      machine.states[STATE_WILD_CARD]?.[action];\n\n    let target = transitionTo;\n\n    if (Array.isArray(target)) {\n      const [, conditional] = target;\n      if (!conditional(payload)) {\n        return from;\n      }\n\n      target = target[0];\n    }\n\n    if (!target || target === from) {\n      return from;\n    }\n\n    return target as S;\n  }\n}\n","import invariant from 'invariant';\n\nimport { isNullish } from 'isNullish';\nimport { Nullish } from 'utilityTypes';\n\nexport function nonnullish<T>(value: Nullish<T>, error?: string): T {\n  invariant(!isNullish(value), error);\n\n  return value;\n}\n","import optionalFunctionValue from 'optionalFunctionValue';\nimport { DynamicValue } from 'utilityTypes';\n\nexport function createTinyState<S>(\n  initialValue: SetValueInput<S>\n): TinyState<S> {\n  let value: S;\n\n  resetValue();\n\n  return () => [value, setValue, resetValue];\n\n  function setValue(nextValue: SetValueInput<S>) {\n    value = optionalFunctionValue(nextValue, value);\n  }\n\n  function resetValue() {\n    setValue(optionalFunctionValue(initialValue));\n  }\n}\n\nexport type TinyState<S> = () => [\n  value: S,\n  setValue: (next: SetValueInput<S>) => void,\n  resetValue: () => void\n];\n\ntype SetValueInput<S> = DynamicValue<S, [prev: S]>;\n","import optionalFunctionValue from 'optionalFunctionValue';\nimport type { Stringable } from 'utilityTypes';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function StringObject(value?: Stringable): String {\n  return new String(optionalFunctionValue(value));\n}\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n","import { isEmpty } from 'isEmpty';\nimport optionalFunctionValue from 'optionalFunctionValue';\nimport { Predicate } from 'utilityTypes';\n\nexport function all<T = any>(...p: Predicate<T>[]): (value: T) => boolean {\n  return (value: T) =>\n    isEmpty(p)\n      ? false\n      : p.every(predicate => optionalFunctionValue(predicate, value));\n}\n\nexport function any<T = any>(...p: Predicate<T>[]): (value: T) => boolean {\n  return (value: T) =>\n    isEmpty(p)\n      ? false\n      : p.some(predicate => optionalFunctionValue(predicate, value));\n}\n"],"names":[],"mappings":";;AAAwB,SAAA,OAAO,CAAwC,EAAK,EAAA;AAC1E,IAAA,OAAO,CAAC,GAAG,IAAmB,KAAc,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3D;;ACAM,SAAU,SAAS,CAAC,KAAsB,EAAA;AAC9C,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAA,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,MAAM,MAAM,GACV,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpE,IAAA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;AACzB,CAAC;MAEY,YAAY,GAAG,OAAO,CAAC,SAAS;;ACP7B,SAAA,YAAY,CAC1B,KAAsB,EACtB,EAAmB,EAAA;AAEnB,IAAA,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;AAC3E,CAAC;MAEY,eAAe,GAAG,OAAO,CAAC,YAAY;;ACPnC,SAAA,YAAY,CAC1B,KAAyB,EACzB,IAAqB,EAAA;IAErB,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1C,CAAC;MAEY,eAAe,GAAG,OAAO,CAAC,YAAY;;ACRnC,SAAA,WAAW,CACzB,KAAsB,EACtB,EAAmB,EAAA;AAEnB,IAAA,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACzE;;ACLgB,SAAA,UAAU,CACxB,KAAyB,EACzB,IAAqB,EAAA;IAErB,OAAO,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACzC;;ACHA;;AAEG;AACW,SAAU,WAAW,CAAc,OAAO,GAAG,CAAC,EAAA;IAC1D,MAAM,YAAY,GAA0B,EAAE,CAAC;AAE/C,IAAA,MAAM,KAAK,GAAG,CACZ,IAAe,EACf,WAAsC,KACjC;QACL,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEjC,QAAA,IAAI,QAAQ;AAAE,YAAA,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEjC,QAAA,MAAM,MAAM,GAAG,WAAW,EAAE,CAAC;AAC7B,QAAA,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;AAE9C,QAAA,IAAI,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC;AAAE,YAAA,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;AAErE,QAAA,OAAO,MAAM,CAAC;AAChB,KAAC,CAAC;;AAGF,IAAA,KAAK,CAAC,UAAU,GAAG,CAAC,IAAW,KAAU;AACvC,QAAA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,KAAK,GAAG,CAAC,CAAC;AAAE,YAAA,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAChD,KAAC,CAAC;;AAGF,IAAA,KAAK,CAAC,GAAG,GAAG,CAAC,IAAe,KAC1B,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC;AAExC,IAAA,OAAO,KAAK,CAAC;IAEb,SAAS,SAAS,CAAC,IAAe,EAAA;AAChC,QAAA,OAAO,YAAY,CAAC,SAAS,CAC3B,CAAC,CAAC,UAAU,CAAC,KACX,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC;AACrC,YAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAChD,CAAC;KACH;AACH;;AC3CM,SAAU,MAAM,CAAC,KAAc,EAAA;IACnC,OAAO,KAAK,KAAK,IAAI,CAAC;AACxB,CAAC;MAEY,SAAS,GAAG,OAAO,CAAC,MAAM;;ACJjC,SAAU,WAAW,CAAC,KAAe,EAAA;IACzC,OAAO,KAAK,KAAK,SAAS,CAAC;AAC7B,CAAC;MAEY,cAAc,GAAG,OAAO,CAAC,WAAW;;ACD3C,SAAU,SAAS,CAAC,KAAU,EAAA;IAClC,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAC7C,CAAC;MAEY,YAAY,GAAG,OAAO,CAAC,SAAS;;ACTrB,SAAA,OAAO,CAAI,WAAoB,EAAA;AACrD,IAAA,OAAQ,EAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACzC;;ACAwB,SAAA,QAAQ,CAAC,GAAS,EAAA;IACxC,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AACjC;;ACJA;;AAEG;AACW,SAAU,cAAc,CACpC,GAAM,EACN,GAA6B,EAAA;AAE7B,IAAA,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD;;ACRwB,SAAA,UAAU,CAChC,KAAc,EAAA;AAEd,IAAA,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;AACrC;;ACFwB,SAAA,SAAS,CAAC,KAAU,EAAA;IAC1C,OAAO,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C;;ACDwB,SAAA,qBAAqB,CAC3C,KAAsB,EACtB,GAAG,IAAe,EAAA;AAElB,IAAA,OAAO,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC;AACpD;;ACRA,aAAe,MAAM,CAAC,MAAM;;ACGd,SAAU,SAAS,CAC/B,KAA+B,EAC/B,YAA6B,EAAA;;IAE7B,OAAO,CAAA,EAAA,GAAA,qBAAqB,CAAC,KAAK,CAAC,mCAAI,qBAAqB,CAAC,YAAY,CAAC,CAAC;AAC7E;;ACLwB,SAAA,SAAS,CAC/B,SAAc;AACd;AACA,OAA6B,EAAA;AAE7B,IAAA,IAAI,SAAS,EAAE;QACb,OAAO;AACR,KAAA;;;;IAKD,MAAM,OAAO,YAAY,MAAM;AAC7B,UAAE,OAAO,CAAC,OAAO,EAAE;AACnB,UAAE,IAAI,KAAK,CAAC,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;AACpE;;AClBwB,SAAA,aAAa,CAAC,CAAU,EAAA;AAC9C,IAAA,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACzB;;ACFc,SAAU,MAAM,CAAC,CAAU,EAAE,CAAU,EAAA;AACnD,IAAA,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACrB;;ACFwB,SAAA,SAAS,CAAC,KAAc,EAAA;AAC9C,IAAA,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC;AAC3B;;ACFwB,SAAA,UAAU,CAAC,OAAgB,EAAA;IACjD,UAAU,CAAC,MAAK;AACd,QAAA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;KAC1B,EAAE,CAAC,CAAC,CAAC;AACR;;ACFA,MAAM,cAAc,GAAG,GAAG,CAAC;SAEX,SAAS,GAAA;IACvB,MAAM,SAAS,GAAyB,EAAE,CAAC;IAE3C,OAAO;QACL,IAAI,CAAC,KAAa,EAAE,IAAU,EAAA;YAC5B,YAAY,CAAC,KAAK,CAAC;AAChB,iBAAA,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;iBACpC,OAAO,CAAC,OAAO,IAAG;gBACjB,OAAO,CAAC,IAAI,CAAC,CAAC;AAChB,aAAC,CAAC,CAAC;SACN;QAED,EAAE,CAAC,KAAa,EAAE,OAAW,EAAA;AAC3B,YAAA,SAAS,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAEvD,OAAO;gBACL,GAAG,GAAA;AACD,oBAAA,SAAS,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,CAAC;iBACnE;aACF,CAAC;SACH;KACF,CAAC;IAEF,SAAS,YAAY,CAAC,KAAa,EAAA;AACjC,QAAA,OAAO,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KAC/B;AACH;;;;;;;AC9BA;;AAEG;AAIH,MAAM,GAAG,GAAG,MAAM,GAAG;AAIf,SAAU,MAAM,CAAC,SAAkB,EAAA;AACvC,IAAA,OAAO,CACL,CAAC,CAAS,KAAK,MACb,CAAA,EAAG,SAAS,GAAG,SAAS,GAAG,GAAG,GAAG,EAAE,CAAA,EAAG,CAAC,EAAE,CAAE,CAAA,EAC7C,CAAC,CAAC,CAAC;AACP;;ACfc,SAAU,QAAQ,CAC9B,KAAU,EACV,QAIY,EAAA;IAEZ,IAAI,KAAK,GAAG,KAAK,CAAC;IAClB,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;AAEhC,QAAA,IAAI,KAAK,EAAE;AACT,YAAA,OAAO,aAAa,CAAC;AACtB,SAAA;AACF,KAAA;AAED,IAAA,SAAS,QAAQ,CAAC,WAAoB,EAAE,KAAc,EAAA;AACpD,QAAA,IAAI,WAAW,EAAE;YACf,KAAK,GAAG,IAAI,CAAC;YACb,aAAa,GAAG,KAAK,CAAC;AACvB,SAAA;KACF;AACH;;ACtBM,SAAU,QAAQ,CAAC,CAAM,EAAA;IAC7B,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAChD;;ACFA;AACA;AACA;AAEM,SAAU,OAAO,CAAC,KAAc,EAAA;IACpC,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACvC,CAAC;MAEY,UAAU,GAAG,OAAO,CAAC,OAAO;;ACLnC,SAAU,OAAO,CAAC,KAAc,EAAA;IACpC,IAAI,CAAC,KAAK,EAAE;AACV,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAAM,SAAA,IAAI,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;AAC1C,QAAA,OAAO,YAAY,CAAC,KAA2B,EAAE,CAAC,CAAC,CAAC;AACrD,KAAA;AAAM,SAAA,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC1B,OAAO,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAgC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvE,KAAA;AAED,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;MAEY,UAAU,GAAG,OAAO,CAAC,OAAO;;ACfnC,SAAU,UAAU,CAAC,KAAsB,EAAA;AAC/C,IAAA,OAAO,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC/B;;ACDA,MAAM,MAAM,GAAG,UAAU,CAAC;SAEV,IAAI,CAAC,GAAW,EAAE,GAAG,aAA6B,EAAA;AAChE,IAAA,MAAM,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAE/B,IAAA,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;QACnB,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,GAAW,KAAI;;YACtD,OAAO,CAAA,EAAG,MAAA,KAAK,CAAC,GAAG,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,WAAW,CAAA,CAAE,CAAC;AACxC,SAAC,CAAC,CAAC;AACJ,KAAA;AAED,IAAA,MAAM,IAAI,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;IAEhC,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,WAAW,IAAG;AACvC,QAAA,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC;AACzD,KAAC,CAAC,CAAC;AACL;;ACjBA,MAAM,eAAe,GAAG,GAAG,CAAC;AAmBtB,SAAU,YAAY,CAC1B,OAA4B,EAAA;AAE5B,IAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;IAE5B,MAAM,GAAG,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC;AAEhE,IAAA,OAAO,GAAG,CAAC;AAEX,IAAA,SAAS,QAAQ,GAAA;AACf,QAAA,OAAO,KAAK,CAAC;KACd;AAED,IAAA,SAAS,OAAO,GAAA;QACd,OAAO,OAAO,CAAC,OAAO,CAAC;KACxB;AAED,IAAA,SAAS,UAAU,CAAC,MAAS,EAAE,OAAa,EAAA;AAC1C,QAAA,QAAQ,KAAK,GAAG,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE;KAC3D;;AAGD,IAAA,SAAS,gBAAgB,CAAC,IAAO,EAAE,MAAS,EAAE,OAAa,EAAA;;AACzD,QAAA,MAAM,YAAY,GAChB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA;;QAE9B,CAAA,EAAA,GAAA,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,MAAM,CAAC,CAAC;QAE5C,IAAI,MAAM,GAAG,YAAY,CAAC;AAE1B,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACzB,YAAA,MAAM,GAAG,WAAW,CAAC,GAAG,MAAM,CAAC;AAC/B,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;AACzB,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AAED,YAAA,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACpB,SAAA;AAED,QAAA,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,EAAE;AAC9B,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AAED,QAAA,OAAO,MAAW,CAAC;KACpB;AACH;;AC7DgB,SAAA,UAAU,CAAI,KAAiB,EAAE,KAAc,EAAA;IAC7D,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AAEpC,IAAA,OAAO,KAAK,CAAC;AACf;;ACNM,SAAU,eAAe,CAC7B,YAA8B,EAAA;AAE9B,IAAA,IAAI,KAAQ,CAAC;AAEb,IAAA,UAAU,EAAE,CAAC;IAEb,OAAO,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAE3C,SAAS,QAAQ,CAAC,SAA2B,EAAA;AAC3C,QAAA,KAAK,GAAG,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACjD;AAED,IAAA,SAAS,UAAU,GAAA;AACjB,QAAA,QAAQ,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC,CAAC;KAC/C;AACH;;;;;;;AChBA;AACM,SAAU,YAAY,CAAC,KAAkB,EAAA;IAC7C,OAAO,IAAI,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;AAClD;;ACNA;AACM,SAAU,IAAI,GAAA;;ACGJ,SAAA,GAAG,CAAU,GAAG,CAAiB,EAAA;IAC/C,OAAO,CAAC,KAAQ,KACd,OAAO,CAAC,CAAC,CAAC;AACR,UAAE,KAAK;AACP,UAAE,CAAC,CAAC,KAAK,CAAC,SAAS,IAAI,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AACtE,CAAC;AAEe,SAAA,GAAG,CAAU,GAAG,CAAiB,EAAA;IAC/C,OAAO,CAAC,KAAQ,KACd,OAAO,CAAC,CAAC,CAAC;AACR,UAAE,KAAK;AACP,UAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AACrE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}