{"version":3,"file":"minifyObject.development.js","sources":["../../src/isArrayValue.ts","../../src/hasOwnProperty.ts","../../src/isNumeric.ts","../../src/numberEquals.ts","../../src/lengthEquals.ts","../../src/isNull.ts","../../src/isUndefined.ts","../../src/isNullish.ts","../../src/valueIsObject.ts","../../src/isEmpty.ts","../../src/isFunction.ts","../../src/isStringValue.ts","../../src/exports/minifyObject.ts"],"sourcesContent":["import bindNot from 'bindNot';\n\n// The module is named \"isArrayValue\" since it\n// is conflicting with a nested npm dependency.\n// We may need to revisit this in the future.\n\nexport function isArray(value: unknown): value is Array<unknown> {\n  return Boolean(Array.isArray(value));\n}\n\nexport const isNotArray = bindNot(isArray);\n","/**\n * A safe hasOwnProperty access\n */\nexport default function hasOwnProperty<T>(\n  obj: T,\n  key: string | number | symbol\n): key is keyof T {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","import bindNot from 'bindNot';\n\nexport function isNumeric(value: string | number): boolean {\n  const str = String(value);\n  const num = Number(value);\n  const result =\n    !isNaN(parseFloat(str)) && !isNaN(Number(value)) && isFinite(num);\n  return Boolean(result);\n}\n\nexport const isNotNumeric = bindNot(isNumeric);\n","import bindNot from 'bindNot';\nimport { isNumeric } from 'isNumeric';\n\nexport function numberEquals(\n  value: string | number,\n  eq: string | number\n): boolean {\n  return isNumeric(value) && isNumeric(eq) && Number(value) === Number(eq);\n}\n\nexport const numberNotEquals = bindNot(numberEquals);\n","import bindNot from 'bindNot';\nimport { numberEquals } from 'numberEquals';\n\nexport function lengthEquals(\n  value: string | unknown[],\n  arg1: string | number\n): boolean {\n  return numberEquals(value.length, arg1);\n}\n\nexport const lengthNotEquals = bindNot(lengthEquals);\n","import bindNot from 'bindNot';\n\nexport function isNull(value: unknown): value is null {\n  return value === null;\n}\n\nexport const isNotNull = bindNot(isNull);\n","import bindNot from 'bindNot';\n\nexport function isUndefined(value?: unknown): value is undefined {\n  return value === undefined;\n}\n\nexport const isNotUndefined = bindNot(isUndefined);\n","import bindNot from 'bindNot';\nimport { isNull } from 'isNull';\nimport { isUndefined } from 'isUndefined';\nimport { Nullish } from 'utilityTypes';\n\nexport function isNullish(value: any): value is Nullish {\n  return isNull(value) || isUndefined(value);\n}\n\nexport const isNotNullish = bindNot(isNullish);\n","import { isNullish } from 'isNullish';\n\nexport function isObject(v: any): v is Record<any, any> {\n  return typeof v === 'object' && !isNullish(v);\n}\n","import bindNot from 'bindNot';\nimport hasOwnProperty from 'hasOwnProperty';\nimport { lengthEquals } from 'lengthEquals';\nimport { isObject } from 'valueIsObject';\n\nexport function isEmpty(value: unknown): boolean {\n  if (!value) {\n    return true;\n  } else if (hasOwnProperty(value, 'length')) {\n    return lengthEquals(value as string | unknown[], 0);\n  } else if (isObject(value)) {\n    return lengthEquals(Object.keys(value as Record<string, unknown>), 0);\n  }\n\n  return false;\n}\n\nexport const isNotEmpty = bindNot(isEmpty);\n","export default function isFunction(\n  value: unknown\n): value is (...args: unknown[]) => unknown {\n  return typeof value === 'function';\n}\n","export default function isStringValue(v: unknown): v is string {\n  return String(v) === v;\n}\n","import { isArray } from 'isArrayValue';\nimport { isEmpty } from 'isEmpty';\nimport isFunction from 'isFunction';\nimport { isNullish } from 'isNullish';\nimport isStringValue from 'isStringValue';\nimport { isObject } from 'valueIsObject';\n\n// Basic key generator that generates keys like a, b, c, ... aa, ab, ac, ...\nfunction genMinifiedKey() {\n  const chars =\n    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&*';\n  let index = 0;\n\n  return function next(): string {\n    let code = '';\n    let x = index;\n\n    do {\n      code = code + chars[x % chars.length];\n      x = Math.floor(x / chars.length);\n    } while (x > 0);\n    index++;\n    return code;\n  };\n}\n\nexport function minifyObject(\n  obj: any,\n  excludeKeys: Set<string> = new Set(),\n): [any, any] {\n  const countMap = new Map<any, number>();\n  countOccurrences(obj, countMap, excludeKeys);\n  const maps = genMap(countMap);\n  const o = minifyObjectImpl(obj, maps.map, excludeKeys);\n  // need to reverse the map so that the minified keys are the keys and the original keys are the values\n  // and turn it into an object\n\n  return [o, maps.reverseMap];\n}\n\nfunction genMap(countMap: Map<any, number>) {\n  const counts = [];\n\n  for (const [value, count] of countMap) {\n    if (count > 1) {\n      counts.push({ value, count });\n    }\n  }\n\n  const sorted = counts.sort((a, z) => z.count - a.count);\n\n  const getKey = genMinifiedKey();\n  return sorted.reduce(\n    (maps, { value }) => {\n      if (!shouldAddToMap(value, maps.keyLength)) {\n        return maps;\n      }\n\n      let key;\n      do {\n        key = getKey();\n      } while (countMap.has(key));\n      maps.map.set(value, key);\n      maps.reverseMap[key] = value;\n      maps.keyLength = key.length;\n      return maps;\n    },\n    {\n      map: new Map(),\n      reverseMap: {},\n      keyLength: 1,\n    } as {\n      map: Map<any, string>;\n      reverseMap: Record<string, any>;\n      keyLength: number;\n    },\n  );\n}\n\n// This avoids minification if the original key is shorter than or equals the minified key\nfunction shouldAddToMap(value: any, keyLength: number) {\n  return value.toString().length >= keyLength;\n}\n\nfunction addCount(value: any, countMap: Map<any, number>) {\n  countMap.set(value, (countMap.get(value) || 0) + 1);\n}\n\n// eslint-disable-next-line complexity\nfunction countOccurrences(\n  obj: any,\n  countMap: Map<any, number>,\n  excludeKeys: Set<string>,\n) {\n  for (const key in obj) {\n    const value = obj[key];\n    if (!shouldMinify({ key, value }, excludeKeys)) continue;\n\n    if (!Array.isArray(obj)) {\n      addCount(key, countMap);\n    }\n\n    if (isObject(value)) {\n      countOccurrences(value, countMap, excludeKeys);\n    } else {\n      addCount(value, countMap);\n    }\n  }\n}\n\nfunction isNonSerializable(value: any): boolean {\n  return isNullish(value) || isFunction(value) || typeof value === 'symbol';\n}\n\n// eslint-disable-next-line complexity\nfunction shouldMinify(\n  { key, value }: { key?: string; value?: any },\n  excludeKeys: Set<string>,\n): boolean {\n  if (key && excludeKeys.has(key)) {\n    return false;\n  }\n\n  if (isObject(value) && isEmpty(value)) {\n    return false;\n  }\n\n  if (isNonSerializable(value)) {\n    return false;\n  }\n\n  if (isObject(value) && isEmpty(value)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction minifyObjectImpl(\n  obj: any,\n  map: Map<any, string>,\n  excludeKeys: Set<string>,\n): any {\n  const minifiedObject: any = getRootNode(obj);\n\n  for (const key in obj) {\n    const value = obj[key];\n    if (!shouldMinify({ key, value }, excludeKeys)) continue;\n\n    let minifiedValue;\n    if (isObject(value)) {\n      minifiedValue = minifyObjectImpl(value, map, excludeKeys);\n    } else {\n      minifiedValue = minifyValue(value, map);\n    }\n\n    setValue(minifiedObject, minifiedValue, minifyValue(key, map));\n  }\n\n  return minifiedObject;\n}\n\nfunction minifyValue(value: any, map: Map<any, string>) {\n  return map.get(value) ?? value;\n}\n\nfunction expandSingle(value: any, map: Record<string, any>): any {\n  if (isStringValue(value)) {\n    return map[value] ?? value;\n  }\n\n  return value;\n}\n\nexport function expandObject(minifiedObj: any, map: Record<string, any>): any {\n  const expandedObject: any = getRootNode(minifiedObj);\n\n  for (const key in minifiedObj) {\n    let expandedValue;\n    const value = minifiedObj[key];\n    if (isObject(value)) {\n      expandedValue = expandObject(value, map);\n    } else {\n      expandedValue = expandSingle(value, map);\n    }\n\n    const expandedKey = expandSingle(key, map);\n    setValue(expandedObject, expandedValue, expandedKey);\n  }\n\n  return expandedObject;\n}\n\nfunction setValue(container: any, value: any, key: string) {\n  if (isArray(container)) {\n    container.push(value);\n  } else {\n    container[key] = value;\n  }\n}\n\nfunction getRootNode(node: any) {\n  return isArray(node) ? [] : {};\n}\n"],"names":[],"mappings":"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"}